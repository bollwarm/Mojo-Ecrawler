<h1 class="graf graf--h3 graf--leading graf--title" id="7b5c" name="7b5c">Perl 6 small stuff #10: Q: How many seconds is a day? A: 86.400, 82.800 and 90.000</h1><p class="graf graf--p graf-after--h3" id="1019" name="1019">Over on Twitter Joelle Maslak (Twitter handle <a class="markup--anchor markup--p-anchor" data-href="https://twitter.com/jmaslak" href="https://twitter.com/jmaslak" rel="noopener nofollow" target="_blank">@jmaslak</a>) asked a question about a date and time problem I honestly had never thought about.</p><figure class="graf graf--figure graf--iframe graf-after--p" id="2bf6" name="2bf6"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 56.2%;"></div><div class="progressiveMedia js-progressiveMedia"><img class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail" crossorigin="anonymous" src="https://i.embed.ly/1/display/resize?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;width=40"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><div class="iframeContainer"><iframe allowfullscreen class="progressiveMedia-iframe js-progressiveMedia-iframe" data-height="281" data-media-id="798bf0d86096b358304fdff36efb6936" data-src="/media/798bf0d86096b358304fdff36efb6936?postId=1bd70c05bbd9" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07" data-width="500" frameborder="0" height="281" width="500"></iframe></div><noscript class="js-progressiveMedia-inner"><div class="iframeContainer"><iframe allowfullscreen data-height="281" data-media-id="798bf0d86096b358304fdff36efb6936" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07" data-width="500" frameborder="0" height="281" src="/media/798bf0d86096b358304fdff36efb6936?postId=1bd70c05bbd9" width="500"></iframe></div></noscript></div></div></figure><p class="graf graf--p graf-after--figure" id="034d" name="034d">How to calculate the number of seconds in a day on dates starting or ending DST? I’ve always just assumed that 86.400 is the correct answer. It makes sense, doesn’t it? 24 hours * 60 minutes * 60 seconds = 86.400.</p><p class="graf graf--p graf-after--p" id="2804" name="2804">Joelle reminded me that these two days a year — at least here in Norway — are either more <em class="markup--em markup--p-em">or </em>less than 86.400. This year (2018) we switched to DST March 25. So I thought that, surely, that had to be something Perl’s Datetime object could figure out? To be honest I thought Joelle had misunderstood something. As it turned out, she hadn’t:</p><pre class="graf graf--pre graf-after--p" id="f509" name="f509">my $d1 = Date.new(&quot;2018-03-25&quot;).DateTime.posix;<br>my $d2 = Date.new(&quot;2018-03-26&quot;).DateTime.posix;<br>say $d2 - $d1;</pre><pre class="graf graf--pre graf-after--pre" id="6907" name="6907"><strong class="markup--strong markup--pre-strong">Output:</strong><br>86400</pre><p class="graf graf--p graf-after--pre" id="51df" name="51df">Stubborn as I am I double checked what’d happen if I checked October 28, 2018 (the day Norway switches from DST to winter time).</p><pre class="graf graf--pre graf-after--p" id="744a" name="744a">my $d1 = Date.new(&quot;2018-10-28&quot;).DateTime.posix;<br>my $d2 = Date.new(&quot;2018-10-29&quot;).DateTime.posix;<br>say $d2 - $d1;</pre><pre class="graf graf--pre graf-after--pre" id="092c" name="092c"><strong class="markup--strong markup--pre-strong">Output:</strong><br>86400</pre><p class="graf graf--p graf-after--pre" id="8f76" name="8f76">It seems that DateTime ignores daylight savings time here, and counts 1 day from the first to the latter. I guess there are good reasons for this — without having checked the underlying code; perhaps it is based on UTC which is without all that DST nonsense?</p><p class="graf graf--p graf-after--p" id="cbdd" name="cbdd">No matter what the reason is: Those of us with locales and time zones that suffer DST changes twice yearly, and who experience that days sometimes are longer, sometimes shorter, knows that the reality <em class="markup--em markup--p-em">feels </em>and<em class="markup--em markup--p-em"> is</em> different. What to do?</p><p class="graf graf--p graf-after--p" id="b74d" name="b74d">Well, sometimes it helps to have lived for a while, because I vaguely remembered that Perl 5’s localtime function returned an array with an element that flagged whether that particular time was DST or not (the <a class="markup--anchor markup--p-anchor" data-href="http://perldoc.perl.org/functions/localtime.html" href="http://perldoc.perl.org/functions/localtime.html" rel="nofollow noopener" target="_blank">Perl 5 localtime documentation</a> calls this flag $isdst). Alas, it seemed that Perl 6 didn’t have the similar built-in.</p><p class="graf graf--p graf-after--p" id="ca3a" name="ca3a">Researching this I found Liz’s module <a class="markup--anchor markup--p-anchor" data-href="https://modules.perl6.org/dist/Time::localtime:cpan:ELIZABETH" href="https://modules.perl6.org/dist/Time::localtime:cpan:ELIZABETH" rel="nofollow noopener" target="_blank">Time::localtime</a>. It basically ports Perl 5’s localtime functions to Perl 6 <strong class="markup--strong markup--p-strong">[1]</strong>. Using <em class="markup--em markup--p-em">zef</em> to install it, I had what it took to write a code snippet that answered Joelle’s original question:</p><pre class="graf graf--pre graf-after--p" id="b070" name="b070">#!/usr/bin/env perl6</pre><pre class="graf graf--pre graf-after--pre" id="2086" name="2086">use Time::localtime;</pre><pre class="graf graf--pre graf-after--pre" id="94cd" name="94cd">sub seconds-in-a-day($start-date) {<br>    my $d1 = Date.new($start-date).DateTime.posix;<br>    my $d2 = Date.new($start-date).DateTime.later(days =&gt; 1).posix;<br>    my $l1 = localtime($d1);<br>    my $l2 = localtime($d2);<br>    return ($l2.isdst ?? $d2 - 3600 !! $d2)<br>         - ($l1.isdst ?? $d1 - 3600 !! $d1);<br>}</pre><pre class="graf graf--pre graf-after--pre" id="7c86" name="7c86">say seconds-in-a-day(&quot;2018-03-25&quot;);<br>say seconds-in-a-day(&quot;2018-05-17&quot;);<br>say seconds-in-a-day(&quot;2018-10-28&quot;);</pre><pre class="graf graf--pre graf-after--pre" id="922a" name="922a"><strong class="markup--strong markup--pre-strong">Output:<br></strong>82800<br>86400<br>90000</pre><p class="graf graf--p graf-after--pre graf--trailing" id="f521" name="f521">So now we’ve solved Joelle’s problem. The number of seconds in a day is 86.400 and 82.800 and 90.000. Case closed…</p>
<div class="aspectRatioPlaceholder-fill" style="padding-bottom: 56.2%;"></div><div class="progressiveMedia js-progressiveMedia"><img class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail" crossorigin="anonymous" src="https://i.embed.ly/1/display/resize?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;width=40"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><div class="iframeContainer"><iframe allowfullscreen class="progressiveMedia-iframe js-progressiveMedia-iframe" data-height="281" data-media-id="798bf0d86096b358304fdff36efb6936" data-src="/media/798bf0d86096b358304fdff36efb6936?postId=1bd70c05bbd9" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07" data-width="500" frameborder="0" height="281" width="500"></iframe></div><noscript class="js-progressiveMedia-inner"><div class="iframeContainer"><iframe allowfullscreen data-height="281" data-media-id="798bf0d86096b358304fdff36efb6936" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07" data-width="500" frameborder="0" height="281" src="/media/798bf0d86096b358304fdff36efb6936?postId=1bd70c05bbd9" width="500"></iframe></div></noscript></div>

<img class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail" crossorigin="anonymous" src="https://i.embed.ly/1/display/resize?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;width=40"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><div class="iframeContainer"><iframe allowfullscreen class="progressiveMedia-iframe js-progressiveMedia-iframe" data-height="281" data-media-id="798bf0d86096b358304fdff36efb6936" data-src="/media/798bf0d86096b358304fdff36efb6936?postId=1bd70c05bbd9" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07" data-width="500" frameborder="0" height="281" width="500"></iframe></div><noscript class="js-progressiveMedia-inner"><div class="iframeContainer"><iframe allowfullscreen data-height="281" data-media-id="798bf0d86096b358304fdff36efb6936" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07" data-width="500" frameborder="0" height="281" src="/media/798bf0d86096b358304fdff36efb6936?postId=1bd70c05bbd9" width="500"></iframe></div></noscript>
<iframe allowfullscreen class="progressiveMedia-iframe js-progressiveMedia-iframe" data-height="281" data-media-id="798bf0d86096b358304fdff36efb6936" data-src="/media/798bf0d86096b358304fdff36efb6936?postId=1bd70c05bbd9" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07" data-width="500" frameborder="0" height="281" width="500"></iframe>
<iframe allowfullscreen data-height="281" data-media-id="798bf0d86096b358304fdff36efb6936" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F983222769847418880%2F9RYsMovz_400x400.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07" data-width="500" frameborder="0" height="281" src="/media/798bf0d86096b358304fdff36efb6936?postId=1bd70c05bbd9" width="500"></iframe>
<p class="graf graf--p graf--leading" id="9fb0" name="9fb0">…or is it? Since one day is 82.800, another is 90.000 and the rest is 86.400, a year surely consists of 365 * 86.400 = 31.536.000? Well, yes, unless you consider leap years which consists of 366 days.</p><p class="graf graf--p graf-after--p graf--trailing" id="a63e" name="a63e">Luckily, DateTime handles leap years perfectly and reports that the year 2016 consists of 31.622.400 seconds. Great. That was what I expected. Case closed…</p>
<p class="graf graf--p graf--leading" id="446d" name="446d">…or is it? No, because 2016 also had a leap second, so the answer should really have been 31.622.401 seconds. If I’m honest we’ve now entered the realm of obscure details. But having fixed the 86.400 DST problem, it’s infuriating to learn that a day really isn’t 86.400 seconds long either. Rather it’s 86.400 and a few milliseconds; every year the day is slowing a little more as well.</p><p class="graf graf--p graf-after--p" id="b686" name="b686">This phenomena is called solar drift. From time to time it’s decided that we need a leap second to compensate for the drift. A bureau overlooks this, and the rule of thumb is that every time the drift closes in or exceeds 0.6 seconds compared to how we count, they insert a leap second (the goal is to keep the difference less than 0.9 seconds at all times). The leap second comes at irregular times and as such is probably difficult to take into count when programming date calculations. For these reasons I guess we shouldn’t expect core Perl 6 to handle it.</p><p class="graf graf--p graf-after--p" id="5129" name="5129">Anyway, we’re lucky that Joelle didn’t ask about these things as well, because that would have become a very different article :-)</p><p class="graf graf--p graf-after--p graf--trailing" id="9855" name="9855"><strong class="markup--strong markup--p-strong">Update:</strong> Read <a class="markup--user markup--p-user" data-action="show-user-card" data-action-type="hover" data-action-value="28e43098657" data-anchor-type="2" data-href="https://medium.com/@b2gills" data-user-id="28e43098657" href="https://medium.com/@b2gills" target="_blank">Brad Gilbert</a>’s excellent comment below. Perl 6 <em class="markup--em markup--p-em">do </em>take leap seconds into consideration, provided that the programmer knows how to ask for it. I sure didn’t.</p>
<p class="graf graf--p graf--leading" id="5aa7" name="5aa7"><strong class="markup--strong markup--p-strong">Notes</strong></p><p class="graf graf--p graf-after--p graf--trailing" id="4569" name="4569"><strong class="markup--strong markup--p-strong">[1] </strong>There’s another module that implements a version of is-dst as well, <a class="markup--anchor markup--p-anchor" data-href="https://modules.perl6.org/dist/DateTime::DST:cpan:HANENKAMP" href="https://modules.perl6.org/dist/DateTime::DST:cpan:HANENKAMP" rel="nofollow noopener" target="_blank">DateTime::DST</a>. For all I know it works as well as Time::localtime, but I couldn’t get it to install on MacOS. My guess is that I (or MacOS in general) lack some kind of OS level shared library for this to work. Luckily Time::localtime did the job for me.</p>
get https://medium.com/@jcoterhals/perl-6-small-stuff-10-q-how-many-seconds-is-a-day-a-86-400-82-800-and-90-000-1bd70c05bbd9?source=user_profile---------3------------------  ok 
